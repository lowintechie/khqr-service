name: Deploy NestJS to Ubuntu Server

on:
  push:
    branches: [ main ]
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Cache Bun dependencies
      uses: actions/cache@v3
      id: cache-bun
      with:
        path: |
          node_modules
          ~/.bun/install/cache
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
        restore-keys: |
          ${{ runner.os }}-bun-

    - name: Install Dependencies
      if: steps.cache-bun.outputs.cache-hit != 'true'
      run: bun install --frozen-lockfile

    - name: Build
      run: bun run build
      
    - name: Cache build output
      uses: actions/cache@v3
      with:
        path: dist
        key: ${{ runner.os }}-build-${{ github.sha }}
    
    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass
      
    - name: Deploy to Ubuntu server
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
        DEPLOY_PATH: '/path/to/your/app'  # Adjust this to your app path
      run: |
        cat << 'EOF' > deploy.sh
        cd $DEPLOY_PATH
        
        # Install Bun if not already installed
        if ! command -v bun &> /dev/null; then
          curl -fsSL https://bun.sh/install | bash
          source ~/.bashrc
        fi
        
        # Backup current version
        if [ -d "backup" ]; then rm -rf backup; fi
        cp -r dist backup 2>/dev/null || true
        
        git pull
        
        # Use cached dependencies if bun.lockb hasn't changed
        if [ "$(git diff HEAD^ HEAD -- bun.lockb | wc -l)" -gt 0 ]; then
          bun install --frozen-lockfile
        fi
        
        bun run build
        
        # Restart PM2 only if build is successful
        if [ $? -eq 0 ]; then
          # If using PM2 with Bun
          pm2 restart your-app-name --interpreter ~/.bun/bin/bun
          # Or if using PM2 to run the built JavaScript
          # pm2 restart your-app-name
        else
          echo "Build failed, restoring backup"
          if [ -d "backup" ]; then
            rm -rf dist
            mv backup dist
          fi
          exit 1
        fi
        EOF
        
        # Execute deployment script
        sshpass -p $DEPLOY_PASSWORD scp -o StrictHostKeyChecking=no deploy.sh $DEPLOY_USER@$DEPLOY_HOST:/tmp/
        sshpass -p $DEPLOY_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST 'bash /tmp/deploy.sh'

    - name: Cleanup remote server
      if: always()
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
      run: |
        sshpass -p $DEPLOY_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST 'rm -f /tmp/deploy.sh'
