name: Deploy KHQR Service

on:
  push:
    branches: [ main ]
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest

    - name: Install Dependencies
      run: bun install --frozen-lockfile

    - name: Build
      run: bun run build
    
    - name: Install sshpass
      run: sudo apt-get update && sudo apt-get install -y sshpass
      
    - name: Deploy to Ubuntu server
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
        DEPLOY_PATH: 'software/khqr-service'
      run: |
        cat << 'EOF' > deploy.sh
        #!/bin/bash
        set -e  # Exit on error

        # Function to log messages
        log() {
          echo "[$(date +'%Y-%m-%d %H:%M:%S')] $1"
        }

        # Navigate to home directory
        cd ~

        # Ensure the software directory exists
        mkdir -p software

        # Navigate to the deployment path
        cd $DEPLOY_PATH || {
          log "Failed to change to $DEPLOY_PATH. Creating it..."
          mkdir -p $DEPLOY_PATH
          cd $DEPLOY_PATH
        }

        # Check if it's a git repository, if not, initialize it
        if [ ! -d ".git" ]; then
          log "Initializing git repository..."
          git init
          git remote add origin https://github.com/yourusername/khqr-service.git || true
        fi

        # Install Bun if not already installed
        if ! command -v bun &> /dev/null; then
          log "Installing Bun..."
          curl -fsSL https://bun.sh/install | bash
          source ~/.bashrc
          # Add Bun to PATH for this session
          export PATH="$HOME/.bun/bin:$PATH"
        fi

        # Backup current version if exists
        if [ -d "dist" ]; then
          log "Backing up current version..."
          rm -rf backup
          cp -r dist backup
        fi

        log "Fetching latest changes..."
        git fetch origin main || log "Failed to fetch, continuing anyway..."
        git reset --hard origin/main

        log "Installing dependencies..."
        bun install --frozen-lockfile

        log "Building project..."
        bun run build

        if [ $? -eq 0 ]; then
          log "Build successful, restarting service..."
          pm2 restart khqr-service --interpreter ~/.bun/bin/bun || {
            log "PM2 restart failed, attempting to start..."
            cd ~/software/khqr-service
            pm2 start dist/main.js --name khqr-service --interpreter ~/.bun/bin/bun
          }
        else
          log "Build failed, restoring backup..."
          if [ -d "backup" ]; then
            rm -rf dist
            mv backup dist
          fi
          exit 1
        fi
        EOF
        
        # Execute deployment script
        sshpass -p $DEPLOY_PASSWORD scp -o StrictHostKeyChecking=no deploy.sh $DEPLOY_USER@$DEPLOY_HOST:/tmp/
        sshpass -p $DEPLOY_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST 'bash /tmp/deploy.sh'

    - name: Cleanup remote server
      if: always()
      env:
        DEPLOY_HOST: ${{ secrets.DEPLOY_HOST }}
        DEPLOY_USER: ${{ secrets.DEPLOY_USER }}
        DEPLOY_PASSWORD: ${{ secrets.DEPLOY_PASSWORD }}
      run: |
        sshpass -p $DEPLOY_PASSWORD ssh -o StrictHostKeyChecking=no $DEPLOY_USER@$DEPLOY_HOST 'rm -f /tmp/deploy.sh'
